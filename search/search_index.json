{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mattermost Customer Success Documentation","text":"<p>This site is intended to document and share processes developed and supported by the Mattermost Customer Success Team.</p> <p>Warning</p> <p>These guides may not be complete or fit for purpose and should be used in consultation with the Mattermost Customer Success Team.</p> <p>Review the Mattermost Product Documentation for additional information.</p> <p>\ud83d\ude80 Elevate Your Team with Mattermost Academy! \ud83d\ude80</p> <p>Unleash the full potential of collaboration with exclusive courses, hot topics, and expert guidance - all in one place.</p> <p>\ud83d\udd17 Join the excitement at academy.mattermost.com!</p>"},{"location":"deploy/aws/","title":"Deploying Mattermost Enterprise High-Availability via AWS","text":"<p>A Step-by-Step Guide to creating and configuring a VPC, Security Groups, Load Balancer, PostgreSQL Database, S3 Storage, Application Nodes, and Elasticsearch for Mattermost on Amazon Web Services.</p>"},{"location":"deploy/aws/#network-resources","title":"Network Resources","text":""},{"location":"deploy/aws/#1-create-a-vpc","title":"1. Create a VPC","text":"<p>Create a Virtual Private Cloud to keep the resources secure and allow them to communicate.</p> <ul> <li>Go to the AWS Management Console.</li> <li>Open the VPC Dashboard by selecting \"VPC\" under the \"Networking &amp; Content Delivery\" section.</li> <li>VPC and More: Ensure \"VPC and More\" is selected to create the VPC with subnets, route tables, and other networking resources.</li> <li>Name Tag Auto-Generation: Check \"Auto-generate\" to have AWS automatically generate name tags for the VPC components.</li> <li>Name Tag: Enter a name for your VPC (e.g., <code>Mattermost-VPC</code>).</li> <li>IPv4 CIDR Block: Specify an IPv4 CIDR block for the VPC (e.g., <code>10.0.0.0/16</code>).</li> <li>IPv6 CIDR Block: If not required, select \"No IPv6 CIDR Block\".</li> <li>Tenancy: Select \"Default\" unless dedicated tenancy is required.</li> <li>Number of Availability Zones (AZs): Choose <code>2</code> for high availability.</li> <li>Number of Public Subnets: Set to <code>2</code> for redundancy across multiple AZs.</li> <li>Number of Private Subnets: Set to <code>2</code> for redundancy across multiple AZs.<ul> <li>Customize Subnet CIDR Blocks (if necessary)</li> </ul> </li> <li>NAT gateways: Select \"1 per AZ\" for fault tolerance and to allow private subnets to access the internet for updates and patching.</li> <li>VPC endpoints: S3 Gateway</li> <li>Enable \"Enable DNS hostnames\" and \"Enable DNS resolution\" to use DNS within your VPC.</li> <li>Review the settings and click \"Create VPC\".</li> </ul>"},{"location":"deploy/aws/#2-create-and-configure-security-groups","title":"2. Create and Configure Security Groups","text":"<p>Create Security Groups for communication between the various services. For each below, complete the following:</p> <ul> <li>Go to the EC2 Dashboard.</li> <li>Select \"Security Groups\" under \"Network &amp; Security\" from the left-hand menu.</li> <li>Click \"Create security group\".</li> </ul>"},{"location":"deploy/aws/#load-balancer","title":"Load Balancer","text":"<ul> <li>Name: Enter a name (e.g., <code>Mattermost-ALB-SG</code>).</li> <li>Description: Provide a description (e.g., \"Security group for Mattermost ALB\").</li> <li>VPC: Select the VPC you created (e.g., \"Mattermost-VPC\").</li> <li>Inbound Rules: Add rules to allow HTTP (port 80) and HTTPS (port 443) traffic from anywhere (0.0.0.0/0).</li> <li>Outbound Rules: Allow all outbound traffic.</li> </ul>"},{"location":"deploy/aws/#database","title":"Database","text":"<ul> <li>Name: Enter a name (e.g., <code>Mattermost-DB-SG</code>).</li> <li>Description: Provide a description (e.g., \"Security group for Mattermost database\").</li> <li>VPC: Select the VPC you created.</li> <li>Inbound Rules: Allow <code>PostgreSQL</code> traffic (port 5432) from the application nodes security group.</li> <li>Outbound Rules: Allow all outbound traffic.</li> </ul>"},{"location":"deploy/aws/#application-nodes","title":"Application Nodes","text":"<ul> <li>Name: Enter a name (e.g., <code>Mattermost-App-SG</code>).</li> <li>Description: Provide a description (e.g., \"Security group for Mattermost application nodes\").</li> <li>VPC: Select the VPC you created.</li> <li>Inbound Rules:<ul> <li>Allow <code>Custom TCP</code> (port 8065) from the ALB security group (<code>Mattermost-ALB-SG</code>).</li> <li>Allow <code>PostgreSQL</code> (port 5432) from the DB security group (<code>Mattermost-DB-SG</code>)</li> <li>Allow <code>SSH</code> traffic (port 22) from your IP address for management.</li> <li>Allow <code>ALL</code> Traffic from within the security group (<code>Mattermost-App-SG</code>).</li> </ul> </li> <li>Outbound Rules: Allow all outbound traffic.</li> </ul>"},{"location":"deploy/aws/#3-create-a-vpc-endpoint","title":"3. Create a VPC Endpoint","text":"<p>The VPC endpoint will allow SSH access to compute resources inside the VPC.</p> <ul> <li>Go to the VPC dashboard and select \"Endpoints\" under \"Virtual Private cloud\"</li> <li>Click \"Create endpoint\"</li> <li>Name tag: <code>Mattermost-VPC-endpoint</code></li> <li>Service category: EC2 Instance Connect Endpoint</li> <li>VPC: Select the VPC created earlier (Eg. <code>Mattermost-VPC</code>)</li> <li>Security groups: Select the App security group (Eg. <code>Mattermost-App-SG</code>)</li> </ul>"},{"location":"deploy/aws/#load-balancer-configuration","title":"Load Balancer Configuration","text":""},{"location":"deploy/aws/#4-request-an-ssltls-certificate","title":"4. Request an SSL/TLS Certificate","text":"<ul> <li>Go to \"AWS Certificate Manager\" and select \"Request certificate\".</li> <li>Certificate type: Request a public certificate.</li> <li>Domain names:<ul> <li>Fully qualified domain name: <code>chat.example.com</code>.</li> </ul> </li> <li>Validation method: DNS validation.</li> <li>Key Algorithm: RSA 2048.</li> <li>DNS Validation:<ul> <li>In the list of certificates, choose the Certificate ID of the certificate just created. This opens a details page for the certificate.</li> <li>In the Domains section, complete one of the following two procedures:<ul> <li>Option 1: Validate with Route 53.<ul> <li>An active \"Create records\" in Route 53 button appears if the following conditions are true:<ul> <li>You use Route 53 as your DNS provider.</li> <li>You have permission to write to the zone hosted by Route 53.</li> <li>Your FQDN still needs to be validated.</li> </ul> </li> <li>Click the Create records in Route 53 button, then click Create records. The Certificate status page should open with a banner reporting successfully created DNS records.</li> </ul> </li> <li>Option 2: Retrieve the CNAME information and add it to your DNS database.<ul> <li>On the details page for the new certificate, you can do this in either of two ways:<ul> <li>Copy the CNAME components displayed in the Domains section. This information needs to be added manually to your DNS database.</li> <li>Alternatively, choose Export to CSV. The information in the resulting file must be added manually to your DNS database.</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"deploy/aws/#5-add-load-balancer-target-groups","title":"5. Add Load Balancer Target Groups","text":"<ul> <li>Go to the EC2 service and select \"Target Groups\" under \"Load Balancing\".<ul> <li>Target Group Name: Enter a name (e.g., <code>Mattermost-Targets</code>).</li> <li>Protocol: Select <code>HTTP</code>.</li> <li>Port: Enter <code>8065</code>.</li> <li>VPC: Select the VPC created earlier.</li> <li>Health Checks: Configure health checks for <code>api/v4/system/ping</code> to monitor instance health.</li> </ul> </li> <li>Skip adding the EC2 nodes to the target group. We will add them later once they are created.</li> </ul>"},{"location":"deploy/aws/#6-set-up-the-load-balancer","title":"6. Set Up the Load Balancer","text":"<p>Note</p> <p>If you are using SSL/TLS, ensure that the certificate generated earlier is \"Issued,\" or it will not be available to be selected. Once the DNS records are updated, certificates can take 30 minutes to validate.</p>"},{"location":"deploy/aws/#create-an-application-load-balancer-alb","title":"Create an Application Load Balancer (ALB)","text":"<ul> <li>Go to the EC2 service and select \"Load Balancers\" under \"Load Balancing\".</li> <li>Click \"Create Load Balancer\" and select \"Application Load Balancer\".</li> <li>Basic Configuration:<ul> <li>Load Balancer Name: Enter a name for the ALB (e.g., <code>Mattermost-ALB</code>).</li> <li>Scheme: Choose \"internet-facing\".</li> <li>IP Address Type: Select \"IPv4\".</li> </ul> </li> <li>VPC: Select the VPC you created (e.g., \"Mattermost-VPC\").</li> <li>Availability Zones and Subnets: Ensure you select the correct public subnets with internet gateway routes. Amazon selects the private ones by default. If you receive the notice that \"The selected subnet does not have a route to an internet gateway,\" you may have selected the private subnet.</li> <li>Attach the security group created for the ALB (<code>Mattermost-ALB-SG</code>).</li> <li>Listeners: Add a listener for HTTP (80). Optionally, add a listener for HTTPS (443) and configure SSL settings.</li> <li>Default Action: Select the existing target group <code>Mattermost-Targets</code>.</li> <li>Default SSL/TLS server certificate:<ul> <li>Certificate source: Certificate (from ACM).</li> <li>Certificate (from ACM): Select the certificate for your domain we created earlier.</li> </ul> </li> <li>The AWS Global Accelerator can be enabled to improve performance and availability.<ul> <li>Accelerator name: <code>Mattermost-ALB-GA</code>.</li> </ul> </li> <li>Review the settings and click \"Create Load Balancer\".</li> </ul>"},{"location":"deploy/aws/#database-configuration","title":"Database Configuration","text":""},{"location":"deploy/aws/#7-provision-the-postgresql-database","title":"7. Provision the PostgreSQL Database","text":""},{"location":"deploy/aws/#create-an-rds-postgresql-instance","title":"Create an RDS PostgreSQL Instance","text":"<p>For best performance, Amazon AuroraDB will be used to host the database.</p> <ul> <li>Go to the RDS service and click \"Create database\".</li> <li>Database Creation Method: Choose \"Standard Create\".</li> <li>Engine Options: Select \"Aurora (PostgreSQL Compatible)\".</li> <li>Engine version: \"Default for major version 16\" or latest default.</li> <li>Templates: Choose \"Production\".</li> <li>DB Instance Identifier: Enter a name (e.g., <code>MattermostDB</code>).</li> <li>Master Username: <code>mmuser</code></li> <li>Credentials management: Self Managed</li> <li>Master Password: <code>StrongPassword</code><ul> <li>1password Password Generator</li> <li>Password Guidelines<ul> <li>The password in the connection string should be chosen carefully to prevent connection issues. Here are some key considerations:<ul> <li>Avoid Special Characters: Some special characters can cause issues if not properly encoded or escaped. Characters such as :, @, /, ?, #, &amp;, and = should generally be avoided in passwords.</li> <li>If these characters must be used, they need to be URL-encoded. For example, @ becomes %40.</li> <li>No Spaces: Avoid using spaces in the password, as they can break the connection string parsing.</li> <li>Length and Complexity: Use a strong password that is long enough and includes a mix of uppercase and lowercase letters, numbers, and other special characters that do not conflict with URL encoding (e.g., !, $, _).</li> <li>Escape Sequences: Ensure special characters are correctly escaped in the connection string. URL-encoding tools can help with this.</li> </ul> </li> </ul> </li> </ul> </li> <li>Cluster storage configuration: Aurora I/O-Optimized</li> <li>DB Instance Class: Select an instance type (e.g., <code>db.r6i.large</code>).</li> <li>Multi-AZ deployment: Create an Aurora Replica or Reader node in a different AZ</li> <li>Compute resource: Don\u2019t connect to an EC2 compute resource.</li> <li>Network type: IPv4</li> <li>Virtual private cloud (VPC): Choose the VPC created earlier (Eg. <code>Mattermost-VPC</code>)</li> <li>DB subnet group: Create new</li> <li>Public access: No</li> <li>VPC security group: Choose the DB security group created earlier (Eg. <code>`Mattermost-DB-SG</code>)</li> <li>Multi-AZ Deployment: Enable for high availability.</li> <li>VPC and Subnets: Select the VPC and private subnets created earlier.</li> <li>Security Groups: Attach the security group created for RDS (<code>Mattermost-DB-SG</code>).</li> <li>Performance Insights: Enable performance monitoring.</li> </ul>"},{"location":"deploy/aws/#application-configuration","title":"Application Configuration","text":""},{"location":"deploy/aws/#8-set-up-the-application-nodes","title":"8. Set Up the Application Nodes","text":""},{"location":"deploy/aws/#launch-ec2-instances","title":"Launch EC2 Instances","text":"<ul> <li>Go to the EC2 service and launch instances using Amazon Linux.</li> <li>Name: <code>Mattermost-App</code></li> <li>Instance Type: Choose based on the expected load (e.g., <code>m5.large</code>).</li> <li>Network Settings: Edit and select the VPC and private subnets created earlier.</li> <li>Security Groups: Attach the security group created for the EC2 instances (<code>Mattermost-App-SG</code>).</li> <li>Configure Storage: <code>30GiB</code> minimum root volume.</li> <li>Advanced details, Hostname type: Resource name</li> <li>Summary, Number of instances: <code>2</code></li> <li>Click \"Launch instance.\"</li> <li>After the instances are created, rename them to <code>Mattermost-App-01</code> and <code>Mattermost-App-02</code></li> </ul>"},{"location":"deploy/aws/#update-load-balancer-target-groups","title":"Update Load Balancer Target Groups","text":"<ul> <li>Go to the EC2 dashboard and select \"Target Groups\" under \"Load Balancing\".</li> <li>Click on the Mattermost Target group (Eg. <code>Mattermost-Targets</code>).</li> <li>Click \"Register targets\"</li> <li>Select the two EC2 Instances created earlier, ensure <code>8065</code> is selected for the port and click \"Include as pending below\"</li> <li>Click \"Register pending targets\"</li> <li>On the\u00a0Group details\u00a0tab, in the\u00a0Attributes\u00a0section, choose\u00a0Edit.</li> <li>On the\u00a0Edit attributes\u00a0page, do the following:<ul> <li>Select\u00a0Stickiness, Turn on stickiness.</li> <li>Stickiness type:\u00a0Application-based cookie</li> <li>Stickiness duration: 12 Hours</li> <li>App cookie name: <code>MMCSRF</code></li> <li>Choose\u00a0Save changes.</li> </ul> </li> </ul>"},{"location":"deploy/aws/#9-install-mattermost","title":"9. Install Mattermost","text":""},{"location":"deploy/aws/#create-mattermost-database","title":"Create Mattermost Database","text":""},{"location":"deploy/aws/#install-dependencies","title":"Install Dependencies","text":"<ul> <li>Using the EC2 Instance Connect Endpoint, SSH (<code>aws ec2-instance-connect ssh --instance-id &lt;ID&gt;</code>) into each EC2 instance and run the following commands:</li> </ul> <pre><code>sudo dnf update -y &amp;&amp; sudo dnf install postgresql15\n</code></pre>"},{"location":"deploy/aws/#connect-to-postgresql","title":"Connect to PostgreSQL","text":"<ul> <li>Go to the RDS Dashboard and select your <code>mattermost</code> database.</li> <li>Under \"Endpoints\" there should be two listed. One for the writer and the other for the reader. Make a note of both endpoints as they will be needed in the configuration later. Note that the reader instance includes an <code>ro</code> in the url.<ul> <li>Writer = <code>mattermostdb.cluster-&lt;ID&gt;.&lt;ZONE&gt;.rds.amazonaws.com</code></li> <li>Reader = <code>mattermostdb.cluster-ro-&lt;ID&gt;.&lt;ZONE&gt;.rds.amazonaws.com</code></li> </ul> </li> </ul> <pre><code>psql --host=&lt;WRITER_ENDPOINT&gt; --port=5432 --dbname=postgres --username=mmuser\n</code></pre>"},{"location":"deploy/aws/#create-the-database","title":"Create the Database","text":"<ul> <li>Run the command below to create the database then quit with <code>\\q</code></li> </ul> <pre><code>CREATE DATABASE mattermost WITH ENCODING 'UTF8' LC_COLLATE='en_US.UTF-8' LC_CTYPE='en_US.UTF-8' TEMPLATE=template0;\n</code></pre>"},{"location":"deploy/aws/#download-and-extract-mattermost","title":"Download and Extract Mattermost","text":"<p>On each node, complete the following:</p> <ul> <li>Download the Mattermost tarball:<ul> <li>Update the <code>VERSION</code> below with the latest ESR release from the version archive.</li> </ul> </li> </ul> <pre><code>export VERSION=9.5.8 &amp;&amp; wget https://releases.mattermost.com/$VERSION/mattermost-$VERSION-linux-amd64.tar.gz\n</code></pre> <ul> <li>Extract the tarball:</li> </ul> <pre><code>tar -xvzf mattermost-$VERSION-linux-amd64.tar.gz\nsudo mv mattermost /opt\nsudo mkdir /opt/mattermost/data\n</code></pre>"},{"location":"deploy/aws/#create-a-mattermost-user","title":"Create a Mattermost User","text":"<ul> <li>Add a Mattermost user and set the proper permissions:</li> </ul> <pre><code>sudo useradd --system --user-group mattermost\nsudo chown -R mattermost:mattermost /opt/mattermost\nsudo chmod -R g+w /opt/mattermost\n</code></pre>"},{"location":"deploy/aws/#configure-mattermost","title":"Configure Mattermost","text":"<ul> <li>Edit the <code>config.json</code> file to set up the database connection and other settings:</li> </ul> <pre><code>sudo nano /opt/mattermost/config/config.json\n</code></pre> <ul> <li>Update the settings as required, particularly the database settings. The <code>DataSource</code> is the writer endpoint and the <code>DataSourceReplicas</code> is the reader.</li> </ul> <pre><code>\"DriverName\": \"postgres\",\n\"DataSource\": \"postgres://mmuser:&lt;PASSWORD&gt;@mattermostdb.cluster-&lt;ID&gt;.&lt;ZONE&gt;.rds.amazonaws.com/mattermost?sslmode=disable&amp;connect_timeout=10\",\n\"DataSourceReplicas\": [\"postgres://mmuser:&lt;PASSWORD&gt;@mattermostdb.cluster-ro-&lt;ID&gt;.&lt;ZONE&gt;.rds.amazonaws.com/mattermost?sslmode=disable&amp;connect_timeout=10\"],\n</code></pre> <ul> <li>Set <code>ServiceSettings.EnableLocalMode</code> to true to allow <code>mmctl</code> commands.</li> <li>(Optionally) Set <code>PluginSettings.EnableUploads</code> to true.</li> </ul>"},{"location":"deploy/aws/#create-systemd-service","title":"Create Systemd Service","text":"<ul> <li>Create a systemd service file for Mattermost:</li> </ul> <pre><code>sudo nano /lib/systemd/system/mattermost.service\n</code></pre> <ul> <li>Add the following content:</li> </ul> <pre><code>[Unit]\nDescription=Mattermost\nAfter=network.target\n\n[Service]\nType=simple\nUser=mattermost\nExecStart=/opt/mattermost/bin/mattermost\nWorkingDirectory=/opt/mattermost\nRestart=always\nRestartSec=10\nLimitNOFILE=49152\n\n[Install]\nWantedBy=multi-user.target\n</code></pre> <ul> <li>Reload systemd and start the Mattermost service:</li> </ul> <pre><code>sudo systemctl daemon-reload\nsudo systemctl enable mattermost\nsudo systemctl start mattermost\n</code></pre>"},{"location":"deploy/aws/#initial-mattermost-configuration","title":"Initial Mattermost Configuration","text":""},{"location":"deploy/aws/#10-create-an-admin-account","title":"10. Create an Admin Account","text":"<p>Once Mattermost is installed and running on both nodes, you must create the first admin account. Navigate to the EC2 dashboard and select \"Load Balancers\" under \"Load Balancing\". Select the load balancer created earlier to view its properties. On this screen, you will see the load balancer \"DNS name\" (<code>Mattermost-ALB-&lt;ID&gt;.&lt;ZONE&gt;.elb.amazonaws.com</code>). You can connect to this directly to set up your account, but it should now be added to your domain's DNS as a <code>CNAME</code> matching your <code>SiteURL</code>.</p> <ul> <li>Connect to your <code>SiteURL</code> through the Load Balancer, and Mattermost should load the initial account creation screen.</li> <li>Create your Admin account and the initial team.</li> </ul>"},{"location":"deploy/aws/#11-cluster-configuration","title":"11. Cluster Configuration","text":"<ul> <li>Now that the admin account is created and Mattermost is running, update the config file on both nodes to enable the cluster.</li> </ul> <pre><code>sudo nano /opt/mattermost/config/config.json\n</code></pre> <ul> <li>Search the config file for <code>ClusterSettings</code> and edit the values to enable the cluster.</li> <li>Change <code>Enable</code> to <code>true</code> and set <code>ClusterName</code> to <code>Production</code>. The default settings are shown below:</li> </ul> <pre><code>    \"ClusterSettings\": {\n        \"Enable\": true,\n        \"ClusterName\": \"Production\",\n        \"OverrideHostname\": \"\",\n        \"NetworkInterface\": \"\",\n        \"BindAddress\": \"\",\n        \"AdvertiseAddress\": \"\",\n        \"UseIPAddress\": true,\n        \"EnableGossipCompression\": true,\n        \"EnableExperimentalGossipEncryption\": false,\n        \"ReadOnlyConfig\": true,\n        \"GossipPort\": 8074,\n        \"StreamingPort\": 8075,\n        \"MaxIdleConns\": 100,\n        \"MaxIdleConnsPerHost\": 128,\n        \"IdleConnTimeoutMilliseconds\": 90000\n    },\n</code></pre> <ul> <li>Ensure the config file is the same on both nodes, and then restart the service on both. <code>sudo systemctl restart mattermost</code>.</li> <li>Login to the Mattermost System Console and ensure the cluster status is appearing as expected and the nodes find themselves. <code>&lt;SiteURL&gt;/admin_console/environment/high_availability</code></li> </ul>"},{"location":"deploy/aws/#12-move-configuration-to-the-database","title":"12. Move configuration to the Database","text":"<p>When configuration in the database is enabled, any changes to the configuration are recorded to the\u00a0<code>Configurations</code>\u00a0and\u00a0<code>ConfigurationFiles</code>\u00a0tables and <code>ClusterSettings.ReadOnlyConfig</code>\u00a0is ignored, enabling full use of the System Console.</p> <ul> <li>Review your <code>/opt/mattermost/config/config.json</code> file for the database connection string.<ul> <li><code>cat /opt/mattermost/config/config.json | grep \"DataSource\"</code></li> </ul> </li> <li>Create an environment file on both nodes to store the database connection string.</li> </ul> <pre><code>sudo nano /opt/mattermost/config/mattermost.environment\n</code></pre> <ul> <li>Add your connection string to the variable below and then add to the top of the <code>mattermost.environment</code> file.<ul> <li>If you have\u00a0<code>\\u0026</code> in the connection string, replace it with\u00a0<code>&amp;</code>, or the service will fail to start.</li> </ul> </li> </ul> <pre><code>MM_CONFIG='postgres://mmuser:&lt;PASSWORD&gt;@mattermostdb.cluster-&lt;ID&gt;.&lt;ZONE&gt;.rds.amazonaws.com/mattermost?sslmode=disable&amp;connect_timeout=10'\n</code></pre> <ul> <li>Edit the <code>mattermost.service</code> file to load the environment file.</li> </ul> <pre><code>sudo nano /lib/systemd/system/mattermost.service\n</code></pre> <ul> <li>Add the following under <code>[Service]</code> just above <code>ExecStart</code>:</li> </ul> <pre><code>EnvironmentFile=/opt/mattermost/config/mattermost.environment\n</code></pre> <ul> <li>Migrate the config to the database using <code>mmctl</code>. This process only needs to be completed on one node.<ul> <li>Ensure the <code>--local</code> is included in your <code>mmct</code> command.</li> <li><code>?sslmode=disable&amp;connect_timeout=10</code> is not supported here and may cause the <code>mmctl</code> command to fail.</li> </ul> </li> </ul> <pre><code>/opt/mattermost/bin/mmctl config migrate /opt/mattermost/config/config.json \"postgres://mmuser:&lt;PASSWORD&gt;@mattermostdb.cluster-&lt;ID&gt;.&lt;ZONE&gt;.rds.amazonaws.com/mattermost\" --local\n</code></pre> <ul> <li>Once the configuration is migrated to the database, reload the <code>mattermost.service</code> on each node to load the new configuration.</li> </ul> <pre><code>sudo systemctl daemon-reload\nsudo systemctl restart mattermost\n</code></pre>"},{"location":"deploy/aws/#13-configure-s3-storage-for-mattermost","title":"13. Configure S3 Storage for Mattermost","text":"<p>To configure Amazon S3 for Mattermost file storage, including files, plugins, and other data, follow these detailed steps:</p>"},{"location":"deploy/aws/#create-an-s3-bucket","title":"Create an S3 Bucket","text":"<ol> <li> <p>Navigate to the S3 Service:</p> <ul> <li>Open the AWS Management Console.</li> <li>Select \"S3\" under \"Storage\".</li> </ul> </li> <li> <p>Create a New Bucket:</p> <ul> <li>Click on \"Create bucket\".</li> <li>Bucket name: Enter a globally unique name (e.g., <code>mattermost-files-storage</code>).</li> <li>Region: Choose the same region as your Mattermost deployment for optimal performance.</li> </ul> </li> <li> <p>Configure Bucket Settings:</p> <ul> <li>Object Ownership: Choose \"ACLs disabled\".</li> <li>Block Public Access settings for this bucket: Ensure all public access is blocked for security.</li> <li>Bucket Versioning: Enable versioning if you want to keep multiple versions of an object (useful for backup purposes).</li> <li>Tags: Add tags for resource management, e.g., <code>Environment=Production</code>.</li> <li>Default encryption: Server-side encryption with Amazon S3 managed keys (SSE-S3)</li> </ul> </li> <li> <p>Review and Create Bucket:</p> <ul> <li>Review the settings and click \"Create bucket\".</li> </ul> </li> </ol>"},{"location":"deploy/aws/#set-up-bucket-permissions","title":"Set Up Bucket Permissions","text":"<p>You can use IAM roles and a corresponding bucket policy to allow the app nodes to access the S3 bucket. Here\u2019s how you can set this up:</p>"},{"location":"deploy/aws/#create-iam-roles-for-ec2-instances","title":"Create IAM Roles for EC2 Instances","text":"<ol> <li> <p>Create IAM Roles:</p> <ul> <li>Go to the IAM service in the AWS Management Console and create a new role.</li> <li>Choose AWS service as the type of trusted entity and select EC2.</li> <li>Attach the policy <code>AmazonS3FullAccess</code> or a custom policy that grants the necessary permissions for S3 access.</li> <li>Name the role (e.g., <code>MattermostS3AccessRole</code>).</li> </ul> </li> <li> <p>Attach the Role to EC2 Instances:</p> <ul> <li>Go to the EC2 Dashboard, select your instances, and choose Actions &gt; Security &gt; Modify IAM Role.</li> <li>Attach the created IAM role (<code>MattermostS3AccessRole</code>) to each instance.</li> </ul> </li> </ol>"},{"location":"deploy/aws/#set-up-the-s3-bucket-policy","title":"Set Up the S3 Bucket Policy","text":"<p>The bucket policy will grant the IAM role attached to the EC2 instances permissions to access the S3 bucket. Here's an example policy:</p> <pre><code>{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"AWS\": [\n          \"arn:aws:iam::&lt;account-id&gt;:role/MattermostS3AccessRole\"\n        ]\n      },\n      \"Action\": \"s3:*\",\n      \"Resource\": [\n        \"arn:aws:s3:::mattermost-files-storage\",\n        \"arn:aws:s3:::mattermost-files-storage/*\"\n      ]\n    }\n  ]\n}\n</code></pre>"},{"location":"deploy/aws/#policy-explanations","title":"Policy Explanations","text":"<ul> <li>Version: Specifies the version of the policy language.</li> <li>Statement: Contains the policy's permission statements.</li> <li>Effect: Set to <code>\"Allow\"</code> to permit access.</li> <li>Principal: Identifies the AWS account, user, role, or federated user to which the policy is attached.<ul> <li>Replace <code>&lt;account-id&gt;</code> with your AWS account ID.</li> <li><code>\"arn:aws:iam::&lt;account-id&gt;:role/MattermostS3AccessRole\"</code> specifies the IAM role that has permissions.</li> </ul> </li> <li>Action: Specify the S3 actions allowed, e.g., <code>s3:*</code> for all actions.</li> <li>Resource: Specifies the S3 bucket and objects the permissions apply to.<ul> <li><code>\"arn:aws:s3:::mattermost-files-storage\"</code> is the bucket itself.</li> <li><code>\"arn:aws:s3:::mattermost-files-storage/*\"</code> covers all objects within the bucket.</li> </ul> </li> </ul>"},{"location":"deploy/aws/#apply-the-bucket-policy","title":"Apply the Bucket Policy","text":"<ol> <li> <p>Navigate to the S3 Service:</p> <ul> <li>In the AWS Management Console, go to the S3 service.</li> <li>Select the bucket for which you want to set permissions (<code>mattermost-files-storage</code>).</li> </ul> </li> <li> <p>Edit the Bucket Policy:</p> <ul> <li>Go to the Permissions tab and select Bucket Policy.</li> <li>Paste the JSON policy above into the policy editor, replacing placeholders with actual values.</li> <li>Save the changes.</li> </ul> </li> </ol>"},{"location":"deploy/aws/#configure-mattermost-to-use-s3","title":"Configure Mattermost to Use S3","text":"<ol> <li> <p>Edit Mattermost Configuration:</p> <ul> <li>SSH into your Mattermost application server.</li> <li>Edit the <code>config.json</code> file located in <code>/opt/mattermost/config/config.json</code>.</li> </ul> </li> <li> <p>Set Up S3 Configuration:</p> <ul> <li>Update the <code>FileSettings</code> section with your S3 bucket details.<ul> <li>Ensure to replace <code>&lt;bucket-region&gt;</code> with your AWS region, <code>AmazonS3Bucket</code> with <code>mattermost-files-storage</code> and <code>DriverName</code> with <code>amazons3</code>.</li> </ul> </li> <li>Default values are shown below:</li> </ul> <pre><code>\"FileSettings\": {\n  \"DriverName\": \"amazons3\",\n  \"AmazonS3AccessKeyId\": \"&lt;your-access-key&gt;\",\n  \"AmazonS3SecretAccessKey\": \"&lt;your-secret-key&gt;\",\n  \"AmazonS3Bucket\": \"mattermost-files-storage\",\n  \"AmazonS3PathPrefix\": \"\",\n  \"AmazonS3Region\": \"&lt;bucket-region&gt;\",\n  \"AmazonS3Endpoint\": \"\",\n  \"AmazonS3SSL\": true,\n  \"AmazonS3SignV2\": false,\n  \"AmazonS3SSE\": false,\n  \"AmazonS3Trace\": false\n}\n</code></pre> </li> <li> <p>Restart Mattermost:</p> <ul> <li>Restart the Mattermost service to apply the changes:</li> </ul> <pre><code>sudo systemctl restart mattermost\n</code></pre> </li> </ol>"},{"location":"deploy/aws/#test-and-validation","title":"Test and Validation","text":"<ul> <li>Log in to Mattermost and upload a file to test the S3 integration.</li> <li>Ensure that files are being stored in the specified S3 bucket.</li> </ul>"},{"location":"deploy/aws/#14-setup-and-configure-ldapsamlsso","title":"14. Setup and Configure LDAP/SAML/SSO","text":"<p>Configure your single sign-on solution if required in your environment. Mattermost supports using LDAP and SAML to sync accounts and groups.</p> <ul> <li>SAML: SAML Single Sign-On .</li> <li>AD/LDAP: Active Directory/LDAP.</li> </ul>"},{"location":"deploy/aws/#optional-calls-setup","title":"(Optional) Calls Setup","text":"<p>Work in Progress ...</p>"},{"location":"deploy/aws/#elasticsearch-configuration","title":"ElasticSearch Configuration","text":"<p>For more details, review the Elasticsearch product documentation.</p>"},{"location":"deploy/aws/#1-create-and-configure-elasticsearch-cluster","title":"1. Create and Configure ElasticSearch Cluster","text":"<p>Work in Progress ...</p>"},{"location":"deploy/aws/#1-configure-mattermost-to-use-elasticsearch","title":"1. Configure Mattermost to use ElasticSearch","text":"<p>Work in Progress ...</p>"},{"location":"deploy/aws/#monitoring-logging-and-maintenance","title":"Monitoring, Logging, and Maintenance","text":"<p>For more details on installing and configuring Prometheus and Grafana, review Deploy Prometheus and Grafana for performance monitoring in the main product documentation.</p>"},{"location":"deploy/aws/#1-set-up-prometheus","title":"1. Set Up Prometheus","text":"<p>Work in Progress ...</p> <ul> <li>Create a new EC2 instance for Prometheus.</li> <li>Install Prometheus and configure it to scrape metrics from Mattermost and PostgreSQL.</li> </ul>"},{"location":"deploy/aws/#1-set-up-grafana","title":"1. Set Up Grafana","text":"<p>Work in Progress ...</p> <ul> <li>Launch an EC2 instance for Grafana or use AWS Managed Grafana.</li> <li>Connect Grafana to Prometheus as a data source.</li> <li>Create dashboards to visualize metrics.</li> <li>Setup Performance Alerts.</li> </ul>"},{"location":"deploy/aws/#1-integrate-with-cloudwatch","title":"1. Integrate with CloudWatch","text":"<ul> <li>Enable CloudWatch logging for EC2 and RDS instances.</li> <li>Configure CloudWatch Alarms for critical metrics.</li> </ul>"},{"location":"deploy/aws/#backup-recovery-and-updating","title":"Backup, Recovery, and Updating","text":""},{"location":"deploy/aws/#1-automate-backups","title":"1. Automate Backups","text":"<ul> <li>Enable automatic backups in RDS and set a retention period.</li> <li>Regularly test your backup and recovery process.</li> </ul>"},{"location":"deploy/aws/#1-regular-updates","title":"1. Regular Updates","text":"<p>Regularly update EC2 instances and Mattermost software.</p> <ul> <li> <p>To update Mattermost on each node:</p> </li> <li> <p>Download the Mattermost tarball:</p> <ul> <li>Update the <code>VERSION</code> below with the latest ESR release from the version archive.</li> </ul> </li> </ul> <pre><code>export VERSION=9.5.8 &amp;&amp; wget https://releases.mattermost.com/$VERSION/mattermost-$VERSION-linux-amd64.tar.gz\n</code></pre> <ul> <li>Extract the tarball:</li> </ul> <pre><code>tar -xvzf mattermost-$VERSION-linux-amd64.tar.gz\n</code></pre> <ul> <li>Shutdown Mattermost, update files, and restart Mattermost:</li> </ul> <pre><code>sudo systemctl stop mattermost.service\nsudo mv mattermost /opt\nsudo chown -R mattermost:mattermost /opt/mattermost\nsudo chmod -R g+w /opt/mattermost\nsudo systemctl start mattermost.service\n</code></pre>"},{"location":"deploy/azure/","title":"WIP - Azure Deployment Guide for Mattermost","text":"<p>Danger</p> <p>This guide is a Work in Progress!</p> <p>Details are under review, may be untested, and should be expected to be incomplete and unfit for purpose.</p> <p>A Step-by-Step Guide to Creating and Configuring Mattermost on AWS</p>"},{"location":"deploy/azure/#1-preparation","title":"1. Preparation","text":""},{"location":"deploy/azure/#permissions-and-subscription","title":"Permissions and Subscription","text":"<p>Ensure you have the necessary permissions to create and manage resources in Azure and have successfully created a subscription.</p>"},{"location":"deploy/azure/#create-a-mattermost-resource-group","title":"Create a Mattermost Resource Group","text":"<ul> <li>Region: (Choose a region to deploy your Mattermost Cluster)</li> </ul>"},{"location":"deploy/azure/#create-a-virtual-network","title":"Create a Virtual Network","text":"<ul> <li>Resource Group: Mattermost</li> <li>Virtual Network Name: mattermost</li> </ul>"},{"location":"deploy/azure/#2-database-setup","title":"2. Database Setup","text":""},{"location":"deploy/azure/#create-an-azure-cosmos-db-for-postgresql-cluster","title":"Create an Azure Cosmos DB for PostgreSQL Cluster","text":""},{"location":"deploy/azure/#basics","title":"Basics","text":"<ul> <li>Resource Group: Mattermost</li> <li>Cluster Name: mattermost-db</li> <li>Location: Customer Choice</li> <li>Scale:<ul> <li><code>2</code> nodes with high availability (HA) enabled (Aggregated 12 vCores / 96 GiB RAM)</li> <li>Node Count: 2</li> <li>Compute per Node: Customer Choice (Default: 4 vCores, 32 GiB RAM)</li> <li>Storage per Node: Customer Choice (Default: 512 GB)</li> <li>High Availability: (Customer Preference)</li> <li>PostgreSQL Version: 16</li> <li>Database Name: mattermost</li> </ul> </li> </ul>"},{"location":"deploy/azure/#networking","title":"Networking","text":"<ul> <li>Connectivity Method: Private access</li> <li>Create Private Endpoint<ul> <li>Resource Group: Mattermost</li> <li>Virtual Network: mattermost</li> <li>Subnet: default</li> </ul> </li> </ul>"},{"location":"deploy/azure/#3-mattermost-app-nodes-setup","title":"3. Mattermost App Nodes Setup","text":""},{"location":"deploy/azure/#create-a-virtual-machine-scale-set","title":"Create a Virtual Machine Scale Set","text":""},{"location":"deploy/azure/#basics_1","title":"Basics","text":"<ul> <li>Resource Group: Mattermost</li> <li>Virtual Machine Scale Set Name: Mattermost</li> <li>Orchestration Mode: Flexible</li> <li>Image: Debian</li> <li>Size: (Select a size based on your node requirements. B series is sufficient for most needs.)</li> <li>Administrator Account:<ul> <li>Authentication Type: SSH public key</li> </ul> </li> </ul>"},{"location":"deploy/azure/#networking_1","title":"Networking","text":"<ul> <li>Virtual Network: mattermost</li> <li>Load Balancing Options:<ul> <li>Application Gateway<ul> <li>Select Application Gateway: Create an Application Gateway</li> <li>Application Gateway Name: mattermost</li> <li>IP Type: Public only</li> <li>Routing Rule<ul> <li>Rule Name: mattermost</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"deploy/azure/#scaling","title":"Scaling","text":"<ul> <li>Initial Instance Count: 2</li> </ul>"},{"location":"deploy/azure/#installation-and-configuration","title":"Installation and Configuration","text":"<ul> <li>Install Mattermost on each node following the official installation guide.</li> <li>Set up networking and security groups to allow communication between the nodes and the PostgreSQL database.</li> <li>Configure Mattermost to connect to the PostgreSQL database by updating the <code>config.json</code> file on each node.</li> </ul>"},{"location":"deploy/azure/#4-create-object-storage","title":"4. Create Object Storage","text":""},{"location":"deploy/azure/#azure-blob-storage-and-minio-container","title":"Azure Blob Storage and Minio Container","text":"<ul> <li>Setup details as per requirement.</li> </ul>"},{"location":"deploy/azure/#5-elasticsearch-setup-optional","title":"5. Elasticsearch Setup (Optional)","text":"<ul> <li>Create an Elasticsearch cluster on Azure following the Azure Elasticsearch documentation.</li> <li>Configure the cluster to handle 1000 posts per minute for indexing and performance.</li> <li>Set up networking and security groups to allow communication between Elasticsearch, Mattermost app nodes, and other components.</li> </ul>"},{"location":"deploy/azure/#6-grafana-and-prometheus-setup","title":"6. Grafana and Prometheus Setup","text":"<ul> <li>Install and configure Prometheus on a VM or AKS to collect metrics from the Mattermost app nodes following the official Prometheus documentation.</li> <li>Install and configure Grafana on a VM or AKS to visualize the metrics collected by Prometheus following the official Grafana documentation.</li> <li>Set up data sources in Grafana to pull data from Prometheus and Elasticsearch.</li> </ul>"},{"location":"deploy/azure/#7-networking-and-security","title":"7. Networking and Security","text":"<ul> <li>Review and update networking configurations to ensure all components can communicate as needed.</li> <li>Update security groups and firewall rules to allow only necessary traffic.</li> <li>Ensure all resources are within the same Virtual Network or are properly peered.</li> </ul>"},{"location":"deploy/azure/#8-testing-and-validation","title":"8. Testing and Validation","text":"<ul> <li>Test the setup by creating posts in Mattermost and verifying they are indexed in Elasticsearch.</li> <li>Verify metrics are being collected in Prometheus and can be visualized in Grafana.</li> <li>Test the Load Balancer to ensure it is distributing traffic correctly and handling WebSocket traffic.</li> </ul>"},{"location":"deploy/azure/#9-monitoring-and-maintenance","title":"9. Monitoring and Maintenance","text":"<ul> <li>Set up Azure Monitor and Alerts to notify you of any issues.</li> <li>Regularly review the performance and security of your setup and make necessary adjustments.</li> </ul>"},{"location":"deploy/azure/#10-documentation","title":"10. Documentation","text":"<ul> <li>Document the setup, configurations, and any customizations made.</li> <li>Ensure all admin users have access to the documentation for reference and troubleshooting.</li> </ul>"},{"location":"deploy/azure/#to-investigate","title":"To Investigate","text":""},{"location":"deploy/azure/#create-an-application-gateway","title":"Create an Application Gateway","text":""},{"location":"deploy/azure/#basics_2","title":"Basics","text":"<ul> <li>Resource Group: Mattermost</li> <li>Application Gateway Name: Mattermost</li> <li>Minimum Instance Count: 1</li> <li>Virtual Network: Create New<ul> <li>Name: mattermost_lb</li> </ul> </li> </ul>"},{"location":"deploy/azure/#frontends","title":"Frontends","text":"<ul> <li>Public IP Address: Add new<ul> <li>Name: mattermost</li> </ul> </li> </ul>"},{"location":"deploy/azure/#backends","title":"Backends","text":"<ul> <li>Name: mattermost</li> <li>Add Backend Pool Without Targets: Yes</li> </ul>"},{"location":"guides/migrate-server/","title":"Migrating Mattermost from One OS to Another","text":""},{"location":"guides/migrate-server/#pre-migration-preparation","title":"Pre-Migration Preparation","text":"<ol> <li> <p>Verify Current Setup:</p> <ul> <li>Note the current Mattermost version (e.g., Enterprise Edition or Team Edition).</li> <li>Confirm the PostgreSQL database version and location (on the same host or remote).</li> </ul> </li> <li> <p>Prepare the New Server:</p> <ul> <li>Install the same version of Mattermost on the new server.</li> <li>Ensure the new server meets all Mattermost system requirements:<ul> <li>Supported OS</li> <li>Sufficient hardware resources</li> <li>Compatible database and libraries.</li> </ul> </li> <li>Set up the PostgreSQL database server (if the database is hosted on the same machine).</li> </ul> </li> <li> <p>Networking and Access:</p> <ul> <li>Confirm the new server's hostname and IP address.</li> <li>Open necessary ports (e.g., 8065 for Mattermost and database-specific ports).</li> <li>Configure the new server with appropriate DNS entries and SSL/TLS certificates.</li> </ul> </li> <li> <p>Backup the Existing Instance:</p> <ul> <li> <p>Create a complete backup of Mattermost data:</p> <ul> <li>Files and folders (<code>/opt/mattermost</code> or equivalent installation directory).</li> <li> <p>PostgreSQL database:</p> <pre><code>pg_dump -U &lt;username&gt; -h &lt;host&gt; -d &lt;database&gt; -F c -b -v -f mattermost_backup.dump\n</code></pre> </li> <li> <p>Replace <code>&lt;username&gt;</code>, <code>&lt;host&gt;</code>, and <code>&lt;database&gt;</code> with appropriate values.</p> <ul> <li>Store backups in a secure location.</li> </ul> </li> </ul> </li> </ul> </li> </ol>"},{"location":"guides/migrate-server/#migration-process","title":"Migration Process","text":""},{"location":"guides/migrate-server/#scenario-1-database-hosted-on-the-same-server","title":"Scenario 1: Database Hosted on the Same Server","text":"<ol> <li> <p>Migrate Database:</p> <ul> <li>Copy the database dump file (<code>mattermost_backup.dump</code>) to the new server.</li> <li> <p>Restore the database on the new server:</p> <pre><code>pg_restore -U &lt;username&gt; -h localhost -d &lt;new_database&gt; -v mattermost_backup.dump\n</code></pre> </li> </ul> </li> <li> <p>Migrate Mattermost Files:</p> <ul> <li> <p>Compress the Mattermost installation folder:</p> <pre><code>tar -czvf mattermost.tar.gz /opt/mattermost\n</code></pre> </li> <li> <p>Transfer the archive to the new server and extract it:</p> <pre><code>tar -xzvf mattermost.tar.gz -C /opt/\n</code></pre> </li> </ul> </li> <li> <p>Update Configuration:</p> <ul> <li>Edit <code>config.json</code> in the Mattermost directory to reflect the new server's hostname, IP address, and database details.</li> </ul> </li> <li> <p>Start Mattermost:</p> <ul> <li> <p>Restart the Mattermost service:</p> <pre><code>systemctl start mattermost\n</code></pre> </li> </ul> </li> <li> <p>Test the Instance:</p> <ul> <li>Verify functionality (e.g., user access, team data, integrations).</li> </ul> </li> </ol>"},{"location":"guides/migrate-server/#scenario-2-database-hosted-remotely","title":"Scenario 2: Database Hosted Remotely","text":"<ol> <li> <p>Update Database Access:</p> <ul> <li>Ensure the new server can access the remote PostgreSQL database.</li> <li>Update <code>config.json</code> with the correct database hostname and credentials.</li> </ul> </li> <li> <p>Migrate Mattermost Files:</p> <ul> <li>Follow the steps in Scenario 1 to transfer and configure Mattermost files.</li> </ul> </li> <li> <p>Start and Test:</p> <ul> <li>Restart the Mattermost service and validate functionality.</li> </ul> </li> </ol>"},{"location":"guides/migrate-server/#post-migration-steps","title":"Post-Migration Steps","text":"<ol> <li> <p>Testing:</p> <ul> <li>Test critical features such as user authentication (e.g., Active Directory integration), messaging, and file uploads.</li> </ul> </li> <li> <p>DNS and SSL Configuration:</p> <ul> <li>Update DNS entries to point to the new server.</li> <li>Verify SSL/TLS certificates are correctly configured.</li> </ul> </li> <li> <p>Monitor Performance:</p> <ul> <li>Monitor logs (<code>/opt/mattermost/logs</code>) for errors.</li> <li>Test load performance if applicable.</li> </ul> </li> <li> <p>Retain Backup for Rollback:</p> <ul> <li>Keep backups available until the new instance is stable.</li> </ul> </li> </ol>"},{"location":"guides/saml-trace/","title":"Troubleshooting Steps to Capture and Examine the SAML Response in Mattermost","text":"<p>To help identify and resolve the issue you're experiencing with SAML login in Mattermost, please follow the below steps to capture and analyze the SAML response from your Identity Provider:</p>"},{"location":"guides/saml-trace/#step-1-open-mattermost-login-page","title":"Step 1: Open Mattermost Login Page","text":"<ul> <li>Action: Navigate to your Mattermost login page using your web browser.</li> </ul>"},{"location":"guides/saml-trace/#step-2-open-developer-tools","title":"Step 2: Open Developer Tools","text":"<ul> <li>Action: Press F12 on your keyboard to open the browser's Developer Tools.<ul> <li>Alternatively, you can right-click anywhere on the page and select \"Inspect\" or \"Inspect Element\" from the context menu.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-3-navigate-to-the-network-tab","title":"Step 3: Navigate to the Network Tab","text":"<ul> <li>Action: In the Developer Tools window, click on the \"Network\" tab.<ul> <li>This tab allows you to monitor all network requests made by the browser.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-4-start-recording-network-activity","title":"Step 4: Start Recording Network Activity","text":"<ul> <li>Action: Ensure that the \"Record\" button (a round button in the upper-left corner of the Network tab) is red.<ul> <li>If it's gray, click it once to start recording network activity.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-5-preserve-the-network-log","title":"Step 5: Preserve the Network Log","text":"<ul> <li>Action: Check the box labeled \"Preserve log\" or \"Persist Logs\".<ul> <li>This ensures that the network requests are retained even if the page redirects during the login process.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-6-clear-existing-logs","title":"Step 6: Clear Existing Logs","text":"<ul> <li>Action: Click the \"Clear\" button (usually represented by a circle with a line through it or a trash can icon) to remove any existing logs.<ul> <li>This helps you focus on the new requests that will be generated during your login attempt.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-7-perform-the-saml-login","title":"Step 7: Perform the SAML Login","text":"<ul> <li>Action: Proceed to log in to Mattermost using the SAML Single Sign-On (SSO) option.<ul> <li>Enter your credentials when prompted by your Identity Provider.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-8-filter-network-requests","title":"Step 8: Filter Network Requests","text":"<ul> <li>Action: After the login attempt, return to the Network tab in Developer Tools.<ul> <li>In the search or filter box (often labeled \"Filter\"), type <code>saml</code> to filter and display only the network requests related to SAML.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-9-locate-the-saml-response","title":"Step 9: Locate the SAML Response","text":"<ul> <li>Action: Look for a network request named <code>saml</code>, <code>sso</code>, or similar.<ul> <li>This request typically corresponds to the SAML response sent from AD FS to Mattermost.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-10-inspect-the-request-payload","title":"Step 10: Inspect the Request Payload","text":"<ul> <li>Action: Click on the relevant network request to view its details.<ul> <li>In the request details pane, navigate to the \"Headers\", \"Payload\", or \"Body\" tab (depending on your browser).</li> <li>Look for a parameter named <code>SAMLResponse</code>. This is the Base64-encoded SAML assertion.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-11-copy-the-samlresponse-value","title":"Step 11: Copy the SAMLResponse Value","text":"<ul> <li>Action: Right-click on the <code>SAMLResponse</code> value (the long encoded string).<ul> <li>Select \"Copy value\" or \"Copy\" from the context menu to copy the encoded string to your clipboard.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-12-decode-the-saml-assertion","title":"Step 12: Decode the SAML Assertion","text":"<ul> <li>Action: Use a Base64 decoding tool to decode the SAML assertion.<ul> <li>Open a web browser tab and navigate to https://www.base64decode.org/.</li> <li>In the decoder tool:<ul> <li>Paste the copied <code>SAMLResponse</code> value into the \"Base64 input\" field.</li> <li>Ensure that any spaces or line breaks are removed from the encoded string.</li> <li>Click on the \"Decode\" button to get the XML content of the SAML assertion.</li> </ul> </li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-13-examine-the-saml-assertion","title":"Step 13: Examine the SAML Assertion","text":"<ul> <li>Action: Review the decoded XML content carefully.<ul> <li>Check for the <code>NameID</code> Element:<ul> <li>Look for the <code>&lt;NameID&gt;</code> element within the XML. This element should contain the user's identifier (e.g., email or username).</li> </ul> </li> <li>Verify Required Attributes:<ul> <li>Ensure that all necessary attributes are present, such as:<ul> <li>Email Address</li> <li>First Name</li> <li>Last Name</li> <li>Group Memberships (if applicable)</li> </ul> </li> <li>Specifically, look for the <code>admin</code> attribute or any other custom attributes you expect.</li> </ul> </li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#step-14-save-the-saml-assertion-optional","title":"Step 14: Save the SAML Assertion (Optional)","text":"<ul> <li>Action: If you need to share the SAML assertion with your administrator or support team:<ul> <li>Save the decoded XML content to a text file.</li> <li>Important: Before sharing, redact or remove any sensitive information to protect user privacy and comply with security policies.</li> </ul> </li> </ul>"},{"location":"guides/saml-trace/#additional-notes","title":"Additional Notes","text":"<ul> <li>Security Reminder:<ul> <li>The SAML assertion contains sensitive information. Handle it with care and do not share it with unauthorized individuals.</li> </ul> </li> <li>Browser Variations:<ul> <li>The exact names of tabs and buttons may vary slightly depending on your browser (e.g., Chrome, Firefox, Edge). However, the general process remains the same.</li> </ul> </li> <li>If the <code>NameID</code> Element is Missing:<ul> <li>This indicates a misconfiguration in the AD FS claims rules. The Identity Provider is not sending the required user identifier.</li> </ul> </li> <li>If Required Attributes Are Missing:<ul> <li>Additional claims rules may need to be configured in AD FS to include these attributes in the SAML assertion.</li> </ul> </li> </ul>"},{"location":"guides/windows-pgadmin_via_tunnel/","title":"Guide: Accessing Your Mattermost PostgreSQL Database via SSH Tunnel and pgAdmin","text":""},{"location":"guides/windows-pgadmin_via_tunnel/#prerequisites","title":"Prerequisites","text":"<p>Before you start, please ensure you have the following:</p> <ol> <li>VS Code installed on your Windows machine.</li> <li>SSH access to the server where your Mattermost PostgreSQL database is hosted.</li> <li>pgAdmin installed on your Windows machine. You can download it from pgAdmin's official site.</li> </ol> <p>This guide will walk you through the process of:</p> <ol> <li>Setting up an SSH tunnel using VS Code.</li> <li>Installing and configuring pgAdmin to connect through the tunnel.</li> </ol>"},{"location":"guides/windows-pgadmin_via_tunnel/#step-1-establish-an-ssh-tunnel-with-vs-code","title":"Step 1: Establish an SSH Tunnel with VS Code","text":"<ol> <li>Open VS Code on your Windows machine.</li> <li>Open the integrated terminal by clicking <code>Terminal &gt; New Terminal</code> or using the shortcut `Ctrl + `` (backtick).</li> <li>Check if you have SSH installed by running:</li> </ol> <pre><code>ssh -V\n</code></pre> <p>If SSH is not installed, you may need to install it. (Refer to this link for installation instructions.)</p> <ol> <li>Set up the SSH Tunnel:    Use the following command to create an SSH tunnel. Replace <code>&lt;username&gt;</code>, <code>&lt;remote-server-ip&gt;</code>, <code>&lt;db-host-ip&gt;</code>, and <code>&lt;db-port&gt;</code> with your own details:</li> </ol> <pre><code>ssh -L 5432:&lt;db-host-ip&gt;:&lt;db-port&gt; &lt;username&gt;@&lt;remote-server-ip&gt;\n</code></pre> <ul> <li><code>5432</code> is the local port on your Windows machine that you will connect to via pgAdmin.</li> <li><code>&lt;db-host-ip&gt;</code> is the IP address or hostname of the database server (it could be <code>localhost</code> if it's on the same server as the SSH).</li> <li><code>&lt;db-port&gt;</code> is the port PostgreSQL is running on (usually <code>5432</code>).</li> <li> <p><code>&lt;remote-server-ip&gt;</code> is the IP address or hostname of the server you are connecting to via SSH.</p> </li> <li> <p>Keep this terminal open. The SSH tunnel will remain active as long as this terminal window is open.</p> </li> </ul>"},{"location":"guides/windows-pgadmin_via_tunnel/#step-2-install-pgadmin-if-not-already-installed","title":"Step 2: Install pgAdmin (if not already installed)","text":"<ol> <li>Download pgAdmin from the pgAdmin website.</li> <li>Run the installer and follow the instructions to complete the installation.</li> </ol>"},{"location":"guides/windows-pgadmin_via_tunnel/#step-3-configure-pgadmin-to-connect-via-the-ssh-tunnel","title":"Step 3: Configure pgAdmin to Connect via the SSH Tunnel","text":"<ol> <li>Open pgAdmin on your Windows machine.</li> <li>Create a New Server Connection:</li> <li>In the left panel, right-click on <code>Servers</code> and select <code>Create &gt; Server</code>.</li> <li> <p>In the <code>General</code> tab, give your connection a name (e.g., <code>Mattermost DB</code>).</p> </li> <li> <p>Configure the Connection:</p> </li> <li> <p>Switch to the <code>Connection</code> tab.</p> <ul> <li>Host name/address: <code>localhost</code></li> <li>Port: <code>5432</code> (or the local port you forwarded in your SSH command)</li> <li>Maintenance database: <code>mattermost</code> (or the name of your Mattermost database)</li> <li>Username: Your database username</li> <li>Password: Your database password</li> </ul> </li> <li> <p>Save the Connection:</p> </li> <li>Click <code>Save</code> to finalize the setup.</li> </ol>"},{"location":"guides/windows-pgadmin_via_tunnel/#step-4-test-the-connection","title":"Step 4: Test the Connection","text":"<ol> <li>Expand the server node in the left panel in pgAdmin.</li> <li>You should see your database and be able to browse tables, run queries, and manage data as needed.</li> <li>If you encounter any issues, double-check the following:</li> <li>Ensure the SSH tunnel is still active in the VS Code terminal.</li> <li>Verify that the host, port, username, and password are correct in your pgAdmin configuration.</li> <li>Check firewall settings or any access rules on your server that might restrict connections.</li> </ol>"},{"location":"guides/windows-pgadmin_via_tunnel/#troubleshooting-tips","title":"Troubleshooting Tips","text":"<ol> <li>SSH Tunnel Not Connecting:</li> <li>Verify the <code>&lt;username&gt;@&lt;remote-server-ip&gt;</code> is correct and that you can SSH into the server without issues.</li> <li> <p>Make sure no other services are using port <code>5432</code> on your local machine.</p> </li> <li> <p>Cannot Connect to Database in pgAdmin:</p> </li> <li>Ensure the SSH tunnel is still active.</li> <li>Double-check your pgAdmin settings, ensuring <code>localhost</code> and <code>5432</code> are correct.</li> <li>Make sure your database username and password are accurate.</li> </ol>"},{"location":"update/v9-11_opensearch/","title":"Upgrade Guide: Mattermost v9.11 Opensearch Migration","text":"<p>Important: Review the release notes for all versions between your current version and v9.11. Follow these steps carefully to avoid disruptions.</p>"},{"location":"update/v9-11_opensearch/#1-prerequisites","title":"1. Prerequisites","text":"<ul> <li>Backup Your System: Create a full backup of your Mattermost server and database.</li> <li>Review System Requirements: Ensure your environment meets the requirements for v9.11.</li> </ul>"},{"location":"update/v9-11_opensearch/#2-key-changes-in-v911","title":"2. Key Changes in v9.11","text":"<ul> <li>Elasticsearch/Opensearch Migration:<ul> <li>Added support for Elasticsearch v8 and Opensearch.</li> <li>AWS customers using Elasticsearch v7.10.x must migrate to AWS Opensearch.</li> </ul> </li> </ul>"},{"location":"update/v9-11_opensearch/#3-upgrade-steps","title":"3. Upgrade Steps","text":""},{"location":"update/v9-11_opensearch/#step-1-upgrade-to-mattermost-v911","title":"Step 1: Upgrade to Mattermost v9.11","text":"<ol> <li>Stop the Mattermost Server.</li> <li>Perform the upgrade using your preferred method (e.g., package manager, manual install).</li> </ol>"},{"location":"update/v9-11_opensearch/#step-2-update-configuration","title":"Step 2: Update Configuration","text":"<p>For Single-Node Deployments (<code>config.json</code>):</p> <ol> <li>Open <code>config.json</code> after the upgrade.</li> <li>Change <code>ElasticsearchSettings.Backend</code> to <code>\"opensearch\"</code> if migrating.</li> </ol> <pre><code>\"ElasticsearchSettings\": {\n    \"Backend\": \"opensearch\"\n}\n</code></pre> <ol> <li>Disable Compatibility Mode in Opensearch settings.</li> </ol> <p>For Clustered Environments Using <code>mmctl</code>:</p> <ol> <li>Connect to your Mattermost instance with <code>mmctl</code>.</li> <li>Run:</li> </ol> <pre><code>mmctl config set ElasticsearchSettings.Backend opensearch\n</code></pre>"},{"location":"update/v9-11_opensearch/#step-3-restart-the-mattermost-server","title":"Step 3: Restart the Mattermost Server","text":"<ul> <li>Restart the server to apply the changes.</li> </ul>"},{"location":"update/v9-11_opensearch/#4-additional-considerations","title":"4. Additional Considerations","text":"<ul> <li>Opensearch Transition: AWS or self-hosted users must update <code>ElasticsearchSettings.Backend</code> to <code>opensearch</code> and disable compatibility mode.</li> <li>Pre-Upgrade Preparation: These settings can only be configured after upgrading to v9.11.</li> </ul>"},{"location":"update/v9-11_opensearch/#5-troubleshooting","title":"5. Troubleshooting","text":"<ul> <li>Configuration Verification:</li> </ul> <pre><code>mmctl config get ElasticsearchSettings\n</code></pre> <p>For more detailed notes, visit Mattermost Upgrade Notes.</p>"}]}